BufferAssignment:
allocation 0: 0x159255e0, size 4096, output shape is |f32[32,32]|, maybe-live-out:
 value: <4 fusion @0> (size=4096,offset=0): f32[32,32]{1,0}
allocation 1: 0x15925690, size 8, constant:
 value: <3 constant_185 @0> (size=8,offset=0): u64[]
allocation 2: 0x15925740, size 4, parameter 0, shape |s32[]| at ShapeIndex {}:
 value: <0 Arg_0.1 @0> (size=4,offset=0): s32[]
allocation 3: 0x159257f0, size 4, parameter 1, shape |s32[]| at ShapeIndex {}:
 value: <1 Arg_1.2 @0> (size=4,offset=0): s32[]
allocation 4: 0x159258a0, size 16, preallocated-temp:
 value: <2 rng-get-and-update-state @0> (size=16,offset=0): u64[2]{0}

Total bytes used: 4128 (4.0KiB)

Used values:
<0 Arg_0.1 @0>
 positions:
  Arg_0.1
 uses:
  fusion, operand 2
 from instruction:%Arg_0.1 = s32[] parameter(0)
<1 Arg_1.2 @0>
 positions:
  Arg_1.2
 uses:
  fusion, operand 3
 from instruction:%Arg_1.2 = s32[] parameter(1)
<2 rng-get-and-update-state @0>
 positions:
  rng-get-and-update-state
 uses:
  fusion, operand 1
 from instruction:%rng-get-and-update-state = u64[2]{0} rng-get-and-update-state(), delta=1024
<3 constant_185 @0>
 positions:
  constant_185
 uses:
  fusion, operand 0
 from instruction:%constant_185 = u64[] constant(32)
<4 fusion @0>
 positions:
  fusion
 uses:
 from instruction:%fusion = f32[32,32]{1,0} fusion(u64[] %constant_185, u64[2]{0} %rng-get-and-update-state, s32[] %Arg_0.1, s32[] %Arg_1.2), kind=kLoop, calls=%fused_computation, metadata={op_name="jit(_truncated_normal)/jit(main)/jit(clip)/jit(jit_clip)/min" source_file="/usr/local/lib/python3.7/dist-packages/flax/core/scope.py" source_line=737}


HloLiveRange (max 5):
  InstructionSequence:
    0:constant_185
    1:Arg_1.2
    2:Arg_0.1
    3:rng-get-and-update-state
    4:fusion
  BufferLiveRange:
    Arg_0.1{}:0-5
    Arg_1.2{}:0-5
    rng-get-and-update-state{}:3-4
    constant_185{}:0-4
    fusion{}:4-5
  Live ranges at 4 (peak):
    Arg_0.1: 4 bytes
    Arg_1.2: 4 bytes
    rng-get-and-update-state: 16 bytes
    constant_185: 8 bytes
    fusion: 4096 bytes
