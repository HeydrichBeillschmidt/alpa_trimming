BufferAssignment:
allocation 0: 0x15c7acd0, size 32768, parameter 1, shape |f32[128,64]| at ShapeIndex {}:
 value: <1 param.1 @0> (size=32768,offset=0): f32[128,64]{1,0}
allocation 1: 0x15c7ad80, size 512, parameter 0, shape |f32[128]| at ShapeIndex {}:
 value: <0 param @0> (size=512,offset=0): f32[128]{0}
allocation 2: 0x15c7ae30, size 256, maybe-live-out:
 value: <3 input_fusion_reduce @0> (size=256,offset=0): f32[64]{0}
allocation 3: 0x15c7aee0, size 8, output shape is |(f32[64])|, maybe-live-out:
 value: <2 tuple{} @0> (size=8,offset=0): (f32[64]{0})
allocation 4: 0x15c7af90, size 4, thread-local:
 value: <4 scalar_lhs @0> (size=4,offset=0): f32[]
allocation 5: 0x15c7b040, size 4, thread-local:
 value: <5 scalar_rhs @0> (size=4,offset=0): f32[]
allocation 6: 0x15c7b0f0, size 4, thread-local:
 value: <6 add @0> (size=4,offset=0): f32[]

Total bytes used: 33556 (32.8KiB)

Used values:
<0 param @0>
 positions:
  param
 uses:
  input_fusion_reduce, operand 1
 from instruction:%param = f32[128]{0} parameter(0), sharding={replicated}
<1 param.1 @0>
 positions:
  param.1
 uses:
  input_fusion_reduce, operand 0
 from instruction:%param.1 = f32[128,64]{1,0} parameter(1), sharding={devices=[1,4]0,1,2,3}
<2 tuple{} @0>
 positions:
  tuple {}
 uses:
 from instruction:%tuple = (f32[64]{0}) tuple(f32[64]{0} %input_fusion_reduce)
<3 input_fusion_reduce @0>
 positions:
  input_fusion_reduce
  tuple {0}
 uses:
  tuple, operand 0
 from instruction:%input_fusion_reduce = f32[64]{0} fusion(f32[128,64]{1,0} %param.1, f32[128]{0} %param), kind=kInput, calls=%input_fused_computation_reduce, metadata={op_type="dot_general" op_name="parallelize(func_shard_parallel)/dot_general[dimension_numbers=(((0,), (0,)), ((), ())) precision=None preferred_element_type=None]" source_file="test_auto_sharding_basic.py" source_line=201}
<4 scalar_lhs @0>
 positions:
  scalar_lhs
 uses:
  add, operand 0
 from instruction:%scalar_lhs = f32[] parameter(0)
<5 scalar_rhs @0>
 positions:
  scalar_rhs
 uses:
  add, operand 1
 from instruction:%scalar_rhs = f32[] parameter(1)
<6 add @0>
 positions:
  add
 uses:
 from instruction:%add = f32[] add(f32[] %scalar_lhs, f32[] %scalar_rhs)


HloLiveRange (max 4):
  InstructionSequence:
    0:param.1
    1:param
    2:input_fusion_reduce
    3:tuple
  BufferLiveRange:
    param{}:0-4
    param.1{}:0-4
    tuple{}:3-4
    input_fusion_reduce{}:2-4
  Live ranges at 3 (peak):
    param: 512 bytes
    param.1: 32768 bytes
    tuple: 8 bytes
    input_fusion_reduce: 256 bytes
